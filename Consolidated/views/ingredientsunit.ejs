<html>

<head>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
	<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.css">

	<link rel="stylesheet" type="text/css" href="/styles.css">
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>


	<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
	<script src="https://kit.fontawesome.com/f3347210b3.js" crossorigin="anonymous"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
	<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.js"></script>
	<title>Ingredients</title>
</head>
</head>

<body>

	<div class="modal" tabindex="-1" role="dialog" id="error-modal">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Error</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body" id="error-message">
					<!-- Error message will be inserted here -->
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">OK</button>
				</div>
			</div>
		</div>
	</div>


	<!-- Add Unit Modal -->
	<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLabel">Add New Unit</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<form id="new_unit" action="/addUnitIU/<%=Ingredient[0].ingredient_id%>" method="post">
					<div class="modal-body">
						<h6>Enter Unit Name</h6><input type="text" name="unit_name" id="unit_name" class="form-control input-width" placeholder="Unit Name" required><br />
						<h6>Enter Unit Symbol</h6><input type="text" name="unit_symbol" id="unit_symbol" class="form-control input-width" placeholder="Unit Symbol" required><br />
					</div>

					<div class="modal-footer">
						<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
						<button type="submit" class="btn btn-primary">Save changes</button>
					</div>
				</form>
			</div>
		</div>
	</div>

	<!-- Verification Modal -->
	<div class="modal fade" id="verificationmodal" tabindex="-1" role="dialog" aria-labelledby="verificationmodalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="verificationmodalLabel">Notice</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					Are you sure you want to save the changes? Once saved, you will not be able to edit them again.
				</div>
				<div class="modal-footer">
					<form action="#" method="post">
						<input type="hidden" id="#" name="#">
						<button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
						<button id="confirm_changes" type="submit" class="btn btn-primary">Okay</button>
					</form>
				</div>
			</div>
		</div>
	</div>

	<div class="d-flex">
		<%- include('navbar'); -%>
		<div class="content d-flex flex-column space-between flex-grow-1">
			<div class="section header mb-4">
				<h1 id="ingredient-name"><i class="fa-regular fa-pen-to-square me-2"></i><%=Ingredient[0].ingredient_name%></h1>
			</div>


			<form id="ingredient-name-form" class="section header d-flex space-between mb-4 <% if (Ingredient[0].ingredient_name !== '') { %>d-none<% } %>" action="/addNameIngredient/<%=Ingredient[0].ingredient_id%>" method="post">
				<div class="d-flex">
					<div class="form-floating">
						<input type="text" name="input1" id="input1" class="form-control input-width" placeholder="Ingredient Name" required>
						<label id="input1-name" for="name">Enter Ingredient Name</label>
					</div>

					<div class="form-floating">
						<select name="units" id="units" class="form-control input-width">

							<option value="" disabled selected>Select Base Unit</option>
							<% for(var n in units){  %>
							<option value="<%=units[n].unit_id%>"><%=units[n].unit_name%></option>
							<%};%>

						</select>
						<label id="units-name" for="baseunit">Base Unit</label>

					</div>
				</div>

				<button type="submit" class="btn btn-success input-btn" value="Confirm" id="my-button" disabled>Confirm</button>
			</form>

			<form class="section header d-flex space-between mb-4 <% if (Ingredient[0].ingredient_name == '') { %>d-none<% } %>" action="/addSubUnit/<%=Ingredient[0].ingredient_id%>" method="post">
				<div class="d-flex">
					<div class="form-floating">
						<select name="sub_unit" id="sub-unit" class="form-control input-width" placeholder="Sub Unit">
							<option value="" disabled selected>Select Sub Unit</option>
							<% for(var n in units){  %>
							<option value="<%=units[n].unit_id%>"><%=units[n].unit_name%></option>
							<%};%>
							<option value="add_new_unit">Add New Unit</option>
						</select>
						<label id="subunit-name" for="subunit">Sub Unit</label>

					</div>

					<div class="form-floating">
						<input type="number" id="multiplier" name="multiplier" min="1" class="form-control input-width" placeholder="Multiplier" oninput="restrictZero()">
						<label id="multiplier-name" for="multiplier">Enter Multiplier</label>
					</div>
				</div>
				<button type="submit" class="btn btn-success input-btn" value="Add Unit" id="add-button" disabled>Add Unit</button>
			</form>

			<div class="d-flex space-between flex-grow-1">
				<div class="section d-flex flex-column flex-grow-1">
					<div class="header">
						<h3>Sub Units</h3>
					</div>
					<div class="d-flex flex-column flex-grow-1 table-container">
						<table id="myTable" class="table table-striped">
							<thead>
								<tr>
									<th scope="col">Unit</th>
									<th scope="col">Multiplier</th>
								</tr>
							</thead>
							<tbody>
								<% for(var i in iUnits){  %>
								<tr>
									<td><%=iUnits[i].unit_name %></td>
									<td><%=iUnits[i].multiplier %></td>
								</tr>
								<%};%>
							</tbody>
						</table>


					</div>
				</div>
			</div>

		</div>


	</div>





</body>


<script>
	var checkInput = () => {
		const ingredient_name = $("#input1").val().trim();
		const units_value = $("#units").val().trim();
		const selectEmpty = units_value === '';

		$('#my-button').prop('disabled', ingredient_name === '' || selectEmpty);
	};

	$(document).on('keyup input', '#input1, #units', checkInput);

	var checkInputUnit = () => {
		const multiplier = $("#multiplier").val().trim();
		const units_value = $("#sub-unit").val().trim();
		const selectEmpty = units_value === '';

		$('#add-button').prop('disabled', multiplier === '' || selectEmpty);
	};

	$(document).on('keyup input', '#sub-unit, #multiplier', checkInputUnit);

	var checkInputBack = () => {
		const ingredient_name = $("#ingredient-name").text().trim();
		const inputsVisible = ingredient_name === ''; // Determine if the inputs should be visible

		$('#input1, #units, #input1-name, #units-name').toggle(inputsVisible); // Toggle the visibility of #input1 and #input2 based on inputsVisible
		$('#my-button').toggle(inputsVisible);
		$('#back-button, #add-button, #sub-unit, #multiplier, #multiplier-name, #subunit-name').prop('hidden', ingredient_name === '');

	};

	$(document).ready(function() {
		checkInputBack(); // Call checkInputBack function on document ready to set initial visibility


		$('#sub-unit').change(function() {
			var selectedUnit = $(this).val(); // Get the selected unit value

			// Check if "Add New Unit" is selected
			if (selectedUnit === "add_new_unit") {


				// Show the modal when "Add New Unit" is selected
				$('#exampleModal').modal('show');

			}
		});

	});

	$(document).on('keyup input', '#ingredient-name', checkInputBack);

	function restrictZero() {
		var inputElement = document.getElementById("multiplier");
		var inputValue = inputElement.value;
		if (inputValue === "0") {
			inputElement.value = "1";
		}

		var inputElement = document.getElementById("input2");
		var inputValue = inputElement.value;
		if (parseFloat(inputValue) === 0) {
			inputElement.value = "1";
		}
	}
	var ingredientsData = JSON.parse('<%- JSON.stringify(ingredients) %>');
	console.log(ingredientsData);

	const inputField = document.getElementById('input1');

	const validateInput = (event) => {
		const input = event.target.value.trim();
		const onlyLetters = /^[A-Za-z]+$/;
		const isDuplicate = ingredientsData.some((ingredient) => ingredient.ingredient_name === input);

		if (!onlyLetters.test(input)) {
			event.preventDefault();
			inputField.setCustomValidity("Please use letters only.");
		} else if (isDuplicate) {
			event.preventDefault();
			inputField.setCustomValidity("This ingredient name already exists. Please enter a different name.");
		} else {
			inputField.setCustomValidity("");
		}
	};

	// Attach the event listener to the input field
	inputField.addEventListener('input', validateInput);


	const unitData = JSON.parse('<%- JSON.stringify(unitsAll) %>');

	const isDuplicate = (input, key) => {
		return unitData.some((unit) => unit[key] === input);
	};


	const validateUnitName = (event) => {
		const inputField = event.target;
		const input = inputField.value.trim();
		const onlyLetters = /^[A-Za-z]+$/;
		const isNameDuplicate = isDuplicate(input, 'unit_name');

		if (!onlyLetters.test(input)) {
			event.preventDefault();
			inputField.setCustomValidity("Please use letters only.");
		} else if (isNameDuplicate) {
			event.preventDefault();
			inputField.setCustomValidity("This unit name already exists. Please enter a different name.");
		} else {
			inputField.setCustomValidity("");
		}
	};

	const validateUnitSymbol = (event) => {
		const inputField = event.target;
		const input = inputField.value.trim();
		const onlyLetters = /^[A-Za-z]+$/;
		const isSymbolDuplicate = isDuplicate(input, 'unit_symbol');

		if (!onlyLetters.test(input)) {
			event.preventDefault();
			inputField.setCustomValidity("Please use letters only.");
		} else if (isSymbolDuplicate) {
			event.preventDefault();
			inputField.setCustomValidity("This unit symbol already exists. Please enter a symbol.");
		} else {
			inputField.setCustomValidity("");
		}
	};


	const unit_name = $('#unit_name');
	const unit_symbol = $('#unit_symbol');



	unit_name.on('input', validateUnitName);
	unit_symbol.on('input', validateUnitSymbol);
</script>

</html>