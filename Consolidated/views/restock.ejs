<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
	<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.css">

	<link rel="stylesheet" type="text/css" href="/styles.css"><!-- CSS -->
	<!-- Add this script tag to the head or body section of your HTML file -->
	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

	<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
	<script src="https://kit.fontawesome.com/f3347210b3.js" crossorigin="anonymous"></script><!-- JavaScript -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
	<script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.js"></script>
	<title>Restock</title>
</head>

<body>
	<div class="d-flex">
		<%- include('navbar'); -%>
		<div class="content d-flex flex-column flex-grow-1">
			<div class="section header mb-4">
				<h1><i class="fa-solid fa-arrows-spin"></i> Restock</h1>
			</div>
			<form class="section header d-flex space-between mb-4" action="/insert_restock" method="post">
				<div class="d-flex">
					<div class="form-floating me-2">
						<select name="ingredient" id="ingredientSelect" class="form-select input-width" onchange="updateUnitSelect()" required>
							<% const rs = ingredientUnitResult[0].data;
                            Object.keys(rs).forEach((value) => { %>
							<option value="<%= value %>"><%= rs[value].ingredientName %></option>
							<% }) %>
						</select>
						<label for="ingredientSelect">Ingredient</label>
					</div>
					<div class="form-floating me-2">
						<select name="unit" id="unitSelect" class="form-select input-width" required>
						</select>
						<label for="unitSelect">Unit</label>
					</div>
					<div class="form-floating">
						<input type="number" name="amount" id="amount" class="form-control input-width" placeholder="Amount" required>
						<label for="amount">Amount</label>
					</div>
				</div>
				<button type="submit" class="btn btn-success input-btn">Restock</button>
			</form>
			<div class="d-flex space-between flex-grow-1">
				<div class="section d-flex flex-column flex-grow-1 me-2">
					<div class="header">
						<h3>Buy Now</h3>
					</div>
					<table class="table table-striped" id="suggest-buy-restock">
						<thead>
							<tr>
								<th scope="col">Ingredient</th>
								<th scope="col">Unit</th>
								<th scope="col">Amount</th>
							</tr>
						</thead>
						<tbody>
							<% result.forEach((item) => { %>
							<tr class="<%=item.ingredient_id%>">

								<td><%=item.ingredient_name%></td>
								<td>
									<select class="analysis w-100" name="ingredient<%=item.ingredient_id%>" id="ingredient<%=item.ingredient_id%>">
										<% Object.keys(item.analysis).forEach((key)=>{ %>
										<option value="<%=item.analysis[key]%>"><%=key%></option>
										<% }) %>
									</select>
								</td>
								<td class="text-end" id="analysis_ingredient<%=item.ingredient_id%>"><%=item.analysis[Object.keys(item.analysis)[0]]%></td>
							</tr>
							<% }) %>
						</tbody>
					</table>
				</div>
				<div class="section d-flex flex-column flex-grow-1">
					<div class="header">
						<h3>Restock Report</h3>
					</div>
					<div class="d-flex header">
						<div class="form-floating">
							<select class="form-control input-width me-2" id="filter-dropdown" onchange="select()">
								<option value="all">All</option>
								<option value="daily">Daily</option>
								<option value="monthly">Monthly</option>
								<option value="yearly">Yearly</option>
								<option value="custom">Custom</option>
							</select>
							<label for="amount">Frequency</label>
						</div>
						<div class="daily d-none">
							<div class="form-floating">
								<input type="date" name="daily" class="form-control input-width me-2" id="daily">
								<label for="amount">Date</label>
							</div>
						</div>
						<div class="monthly d-none">
							<div class="form-floating">
								<input type="month" name="daily" class="form-control input-width me-2" id="monthly">
								<label for="amount">Month</label>
							</div>
						</div>
						<div class="yearly d-none">
							<div class="form-floating">
								<input type="number" name="daily" class="form-control input-width me-2" placeholder="YYYY" id="yearly">
								<label for="amount">Year</label>
							</div>
						</div>
						<div class="custom d-flex d-none">
							<div class="form-floating">
								<input type="date" name="startDate" onchange="updateEndDate()" class="form-control input-width me-2" id="minDate">
								<label for="amount">Start Date</label>
							</div>
							<div class="form-floating">
								<input type="date" name="endDate" onchange="updateStartDate()" class="form-control input-width" id="maxDate">
								<label for="amount">End Date</label>
							</div>
						</div>
					</div>
					<div class="d-flex flex-column flex-grow-1 table-container">
						<table id="myTable" class="table table-striped">
							<thead>
								<tr>
									<th scope="col">Ingredient</th>
									<th scope="col">Unit</th>
									<th scope="col">Amount</th>
									<th scope="col">User</th>
									<th scope="col">Date</th>
								</tr>
							</thead>
							<tbody>
								<% restock.forEach((item) => { %>
								<tr class="<%= item.ingredient_id %>">
									<% Object.keys(item).forEach((key) => { %>
									<td>
										<%= item[key] %>
									</td>
									<% }) %>
								</tr>
								<% }) %>
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>

	</div>
	<script>
		const ingredientUnitResult = JSON.parse('<%- JSON.stringify(ingredientUnitResult)%>');
		const selectedIngredientId = document.getElementById('ingredientSelect').value;
		const rs = ingredientUnitResult[0].data;

		function updateUnitSelect() {
			const ingredientSelect = document.getElementById('ingredientSelect');
			const unitSelect = document.getElementById('unitSelect');
			const selectedIngredientId = ingredientSelect.value;
			// Clear the unitSelect options
			unitSelect.innerHTML = '';

			// Add the options to the unitSelect
			for (const key in rs[selectedIngredientId].units) {
				const option = document.createElement('option');
				option.value = key;
				option.text = rs[selectedIngredientId].units[key];
				unitSelect.appendChild(option);
			}
		}

		function updateEndDate() {
			const minDate = document.getElementById('minDate').value;
			const maxDate = document.getElementById('maxDate');
			if (minDate != '' && minDate > maxDate.value)
				maxDate.value = null;
			maxDate.setAttribute("min", minDate)
		}

		function updateStartDate() {
			const minDate = document.getElementById('minDate');
			const maxDate = document.getElementById('maxDate').value;
			if (maxDate != '' && maxDate < minDate.value)
				minDate.value = null;
			minDate.setAttribute("max", maxDate)
		}

		updateUnitSelect();

		$(document).ready(function() {
			$.fn.dataTable.ext.search.push(
				function(settings, data, dataIndex) {
					var filterType = $('#filter-dropdown').val();

					var date = moment(data[4], 'YYYY-MM-DD');
					if(filterType === 'all')
						return true;
					if (filterType === 'daily') {
						var inputDate = $('#daily').val();
						if (inputDate==null) {
							return true; // If no input date, do not filter
						}
						var selectedDate = moment(inputDate, 'YYYY-MM-DD');
						if (!selectedDate.isValid() || date.isSame(selectedDate, 'day')) {
							return true;
						}
					} else if (filterType === 'monthly') {
						var inputDate = $('#monthly').val();
						if (inputDate==null) {
							return true; // If no input date, do not filter
						}
						var selectedMonthYear = moment(inputDate, 'YYYY-MM');
						if (!selectedMonthYear.isValid() || date.isSame(selectedMonthYear, 'month')) {
							return true;
						}
					} else if (filterType === 'yearly') {
						var inputDate = $('#yearly').val();
						if (inputDate==null) {
							return true; // If no input date, do not filter
						}
						var selectedYear = parseInt(inputDate, 10);
						if (!Number.isInteger(selectedYear) || date.year() === selectedYear) {
							return true;
						}
					} else if (filterType === 'custom') {
						var min = moment($('#minDate').val());
						var max = moment($('#maxDate').val());
						var date = moment(data[4], 'YYYY-MM-DD');

						if (
							(min.isSameOrBefore(date) || !min.isValid()) &&
							(max.isSameOrAfter(date) || !max.isValid())
						) {
							return true;
					}
					}

					return false; // If the date does not match the selected filter, exclude the row
				}
			);

			var table = $('#myTable').DataTable({
				columns: [{
						data: 'Ingredient'
					},
					{
						data: 'Unit'
					},
					{
						data: 'Amount'
					},
					{
						data: 'User'
					},
					{
						data: 'Date',
						render: function(data, type, row) {
							if (type === 'display' || type === 'filter') {
								return moment(data).format('YYYY-MM-DD');
							}
							return data;
						}
					},
				],
				columnDefs: [{
					"className": "text-center",
					"targets": 4
				}],
				info: false,
				language: {
					emptyTable: 'No data available'
				},
				deferRender: true,
				dom: 'frtip',
				lengthMenu: [
					[11],
					[11]
				],
				drawCallback: function(settings) {
					var api = this.api();
					var info = api.page.info();
					var totalPages = info.pages;
					var currentPage = info.page;
					if (currentPage === totalPages - 1) {
						var rowCount = api.rows({ search: 'applied' }).data().length;
						var rows = api.rows({ search: 'applied' }).nodes();
						var lastRow = rows[rowCount - 1];
						$(lastRow).after(
							'<tr class="end-of-report"><td colspan="5" class="text-center text-danger">End of Report</td></tr>'
						);
					} else {
						$('.end-of-report').remove();
					}
				},
			});
			$('#filter-dropdown').on('change', function() {
				table.draw();
			});

			$('#minDate, #maxDate, #daily, #monthly, #yearly').on('change', function() {
				table.draw();
			});
			// Sorting the data after the table is loaded
			table.order([
				[4, 'desc']
			]).draw();

			var tableRestock = $('#suggest-buy-restock').DataTable({
				columns: [{
						data: 'Ingredient'
					},
					{
						data: 'Unit'
					},
					{
						data: 'Amount'
					},
				],
				columnDefs: [{
					"targets": 1,
					"orderable": false,
				}],
				info: false,
				language: {
					emptyTable: 'No data available'
				},
				deferRender: true,
				dom: 'rtip',
				lengthMenu: [
					[13],
					[11]
				],
			});

			$($.fn.dataTable.tables(true)).css('width', '100%');
			$($.fn.dataTable.tables(true)).DataTable().columns.adjust().draw();

			document.querySelectorAll("select.analysis").forEach((selector) => {
				selector.addEventListener("change", (event) => {
					document.querySelector("#analysis_" + selector.id).innerHTML = selector.value + "";
				})
			});
		});
	</script>
	<script src="index.js"></script>
</body>

</html>